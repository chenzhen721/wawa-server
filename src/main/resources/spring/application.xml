<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:websocket="http://www.springframework.org/schema/websocket"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
                http://www.springframework.org/schema/websocket
                http://www.springframework.org/schema/websocket/spring-websocket.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="com.wawa.service"/>


    <!-- the service we want to make cacheable -->

    <context:property-placeholder  location="classpath*:*.properties" ignore-unresolvable="true" />
    <util:properties id="application" location="classpath:application.properties" />

    <!--娃娃机指令交互-->
    <bean id="machine" class="com.wawa.socket.MachineSocketServer"/>
    <!--客户端指令交互-->
    <bean id="doll" class="com.wawa.socket.DollSocketServer"/>
    <!--娃娃机and客户端推拉视频流-->
    <bean id="video" class="com.wawa.socket.VideoSocketServer"/>
    <!--客户服务端信息流-->
    <bean id="message" class="com.wawa.socket.MessageSocketServer"/>
    <bean id="handshakeHandler" class="org.springframework.web.socket.server.support.DefaultHandshakeHandler"/>

    <websocket:handlers allowed-origins="*">
        <websocket:mapping path="/machine" handler="machine"/>
        <websocket:handshake-handler ref="handshakeHandler"/>
        <websocket:handshake-interceptors>
            <bean class="com.wawa.socket.MachineHandshakeInterceptor"/>
        </websocket:handshake-interceptors>
    </websocket:handlers>
    <websocket:handlers allowed-origins="*">
        <websocket:mapping path="/doll" handler="doll"/>
        <websocket:handshake-handler ref="handshakeHandler"/>
        <websocket:handshake-interceptors>
            <bean class="com.wawa.socket.DollHandshakeInterceptor"/>
        </websocket:handshake-interceptors>
    </websocket:handlers>
    <websocket:handlers allowed-origins="*">
        <websocket:mapping path="/push" handler="video"/>
        <websocket:handshake-handler ref="handshakeHandler"/>
        <websocket:handshake-interceptors>
            <bean class="com.wawa.socket.VideoHandshakeInterceptor"/>
        </websocket:handshake-interceptors>
    </websocket:handlers>
    <websocket:handlers allowed-origins="*">
        <websocket:mapping path="/pull" handler="video"/>
        <websocket:handshake-handler ref="handshakeHandler"/>
        <websocket:handshake-interceptors>
            <bean class="com.wawa.socket.VideoHandshakeInterceptor"/>
        </websocket:handshake-interceptors>
    </websocket:handlers>
    <websocket:handlers allowed-origins="*">
        <websocket:mapping path="/im" handler="message"/>
        <websocket:handshake-handler ref="handshakeHandler"/>
        <websocket:handshake-interceptors>
            <bean class="com.wawa.socket.MessageHandshakeInterceptor"/>
        </websocket:handshake-interceptors>
    </websocket:handlers>

    <!--<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"-->
          <!--p:configLocation="classpath:ehcache.xml"/>-->
    <!--<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" p:cacheManager-ref="ehcache"/>-->
    <!--<cache:advice id="cacheAdvice" cache-manager="cacheManager">-->
        <!--<cache:caching cache="name2id">-->
            <!--<cache:cacheable method="name2id"/>-->
            <!--&lt;!&ndash;<cache:cache-evict method="loadBooks" all-entries="true"/>&ndash;&gt;-->
        <!--</cache:caching>-->
    <!--</cache:advice>-->

    <!-- apply the cacheable behaviour to all BookService interfaces
    <aop:config>
        <aop:advisor advice-ref="cacheAdvice" pointcut="execution(* com.ttpod.star.service.UserService.*(..))"/>
    </aop:config>
-->
</beans>